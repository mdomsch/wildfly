---
# tasks file for wildfly

- name: Install OpenJDK
  yum: name=java-1.8.0-openjdk-headless state=present

- name: Check if wildfly version file exists
  stat: path={{ wildfly_version_file }}
  register: wildfly_version_file_st
  changed_when: not wildfly_version_file_st.stat.exists

- name: Check wildfly installation
  shell: grep -q "{{ wildfly_version }}" {{ wildfly_version_file }} && echo $?
  register: wildfly_installed
  when: wildfly_version_file_st.stat.exists and
        not wildfly_version_file_st.stat.isdir
  changed_when: wildfly_installed.rc == 1

- name: Download wildfly tar file
  get_url: dest={{ wildfly_download_dir }} url={{ wildfly_download_url }}
  when: wildfly_installed.stdout is not defined or not wildfly_installed.stdout

- name: Create wildfly group
  group: name=wildfly state=present
  when: wildfly_installed.stdout is not defined or not wildfly_installed.stdout

- name: Create wildfly user
  user: name=wildfly group=wildfly createhome=no state=present
  when: wildfly_installed.stdout is not defined or not wildfly_installed.stdout

- name: Unarchive downloaded file
  unarchive: src={{ wildfly_download_dir }}/{{ wildfly_download_file }}
             dest={{ wildfly_install_dir }} copy=no
  when: wildfly_installed.stdout is not defined or not wildfly_installed.stdout

- name: Change wildfly installation permissions
  file: path={{ wildfly_dir }} owner=wildfly group=wildfly mode=0750
        recurse=yes

- name: Create wildfly log directory
  file: path={{ wildfly_log_dir }} owner=wildfly group=wildfly mode=0755
        state=directory

- name: Create wildfly etc directory
  file: path={{ wildfly_conf_dir }} owner=wildfly group=wildfly mode=750
        state=directory

- name: Copy wildfly configuration
  template: src=wildfly.conf.j2 dest={{ wildfly_conf_dir }}/wildfly.conf
            owner=root group=root mode=0640
  notify: restart wildfly

- name: Copy wildfly properties file
  template: src=wildfly.properties.j2 owner=wildfly group=wildfly mode=0640
            dest={{ wildfly_conf_dir }}/wildfly.properties
  notify: restart wildfly

- name: Copy wildfly init script
  template: src=wildfly.j2 dest={{ wildfly_init_dir }}/wildfly owner=root
            group=root mode=0750
  notify: restart wildfly

- name: Open wildfly management tcp port
  firewalld: port={{ wildfly_manage_port }}/tcp permanent=true immediate=true
             state=enabled
  tags:
    - firewalld
    - no-docker

- name: Open wildfly management udp port
  firewalld: port={{ wildfly_manage_port }}/udp permanent=true immediate=true
             state=enabled
  tags:
    - firewalld
    - no-docker

- name: Open wildfly http tcp port
  firewalld: port={{ wildfly_http_port }}/tcp permanent=true immediate=true
             state=enabled
  tags:
    - firewalld
    - no-docker

- name: Open wildfly http udp port
  firewalld: port={{ wildfly_http_port }}/udp permanent=true immediate=true
             state=enabled
  tags:
    - firewalld
    - no-docker

- name: Enable and start the service
  service: name=wildfly enabled=yes state=started
  tags:
    - no-docker

- name: Delete wildfly tar file
  file: path={{ wildfly_download_dir }}/{{ wildfly_download_file }}
        state=absent

# The mode is the same as the installation dir to show the correct change state
- name: Create a version file
  template: src=version.j2 dest={{ wildfly_version_file }} owner=wildfly
            group=wildfly mode=0750

# If we don't do this, there's a false changed status in the next run for some
# reason. Try removing this task and running the role twice, it makes no sense.
- name: Fix permission limbo
  file: path={{ wildfly_dir }} owner=wildfly group=wildfly mode=0750
        recurse=yes
